package sbnz.integracija;
import demo.facts.Writer;
import demo.facts.Genre;
import demo.facts.User;
import demo.facts.UserState
import demo.facts.AuthorizedRecommendedFavoriteGenreBooks;
import java.time.LocalDate;
import java.util.ArrayList;
import dtos.UserRatingsDto
import demo.facts.Book;
import demo.facts.Rating;

rule "New User if less than 10 books rated AND has favorite Genres"
no-loop
    agenda-group "userState"
        when
            $u : User($u.getRatingNumber < 10, $u.hasFavoriteGenres == true )
        then
            System.out.println("NEW_WITH_GENRES");
            modify($u){setState(UserState.NEW_WITH_GENRES)};
    end

rule "New User if less than 10 books rate AND NO favorite Genres"
no-loop
    agenda-group "userState"
        when
            $u : User($u.getRatingNumber < 10, $u.hasFavoriteGenres == false )
        then
            System.out.println("NEW");
            modify($u){setState(UserState.NEW)};
    end

rule "Old User if more than 10 books rated"
no-loop
    agenda-group "userState"
        when
            $u : User($u.getRatingNumber >= 10)
        then
            System.out.println("OLD");
            modify($u){setState(UserState.OLD)};
    end


rule "Evaluate similar users"
    agenda-group "oldUser"
        when
            $u: User($u.getState == UserState.OLD, $s: ratings)
            $r: UserRatingsDto($r.getCorrelationCoefficient($s, $u.getAvgRating) < 0.5)
        then
            delete($r);
end

rule "Insert books that are rated by similar users"
    agenda-group "oldUser"
        when
           $b: UserRatingsDto()
           $u: User($u.getState == UserState.OLD)
           $r: Rating(rate >= 4 && !$u.hasRatedBook(book)) from $b.ratings
        then
            insert($r.book);
end

rule "Evaluate Writers for Favorite Genres"
    agenda-group "newGenreUser"
        when
            $u : User($u.state == UserState.NEW_WITH_GENRES , $f: favoriteGenres)
            $g : Genre() from $f
            $w : Writer($w.getGenreRepresentationInWriter($g) >= 0.30)
            $l : AuthorizedRecommendedFavoriteGenreBooks()
        then
            System.out.println("MATCHING WRITER FOUND");
            $l.addWriter($w);
            System.out.println($w.getName());
            System.out.println($w);
            System.out.println("MATCHING WRITER FOUND END");
    end




rule "Find 4 Most Popular Writers"
    agenda-group "newGenreUser"
        when
            $l : AuthorizedRecommendedFavoriteGenreBooks(topWriters.size()<4) @Watch (topWriters,allWriters) //NI WATCH NE RADI NISTA BUKVALNO
            $w : Writer() from $l.allWriters
            // $w : Writer($w.isEmpty() == false) from $l.getPopularWriterAndDelete()
            $v : Writer($v.isEmpty()== false) from $l.getPopularWriterAndDelete()
            
        then
            if ($l.getTopWriters().size() < 4) {
                System.out.println("POPULAR WRITER FOUND");
                $l.addPopularWriter($v);
                System.out.println($v.getName());
                System.out.println("POPULAR WRITER FOUND END");
            }
    end



rule "Add Books from Top Writers"
    agenda-group "newGenreUser"
        when
            $l : AuthorizedRecommendedFavoriteGenreBooks($t: topWriters)
            $w : Writer() from $t
            $b : Book() from $w.getBooks()
        then
            System.out.println("ADDED BOOK");
            $l.addBook($b);
    end

rule "Get Best Books"
    agenda-group "newGenreUser"
        when
            $l : AuthorizedRecommendedFavoriteGenreBooks(topWriters.size()<10 , $t: topWriters)
            $i : Book() from $l.getAllBooks()
            $b : Book($b.isEmpty()== false) from $l.getPopularBookAndDelete()
        then
            System.out.println("ENTERD THEN POPULAR BOOK");
            System.out.println($b.getTitle());
            System.out.println($b.getRating());
            if ($l.getTopBooks().size() < 10) {
                System.out.println("ADDED POPULAR BOOK");
                $l.addPopularBook($b);
            }
    end


// rule "Find 4 Most Popular Writers"
//     agenda-group "newGenreUser"
//         when
//             $l : AuthorizedRecommendedFavoriteGenreBooks(topWriters.size() < 4,$a: allWriters) @Watch(topWriters,allWriters)
//             $w : Writer($w.isEmpty() == false) from $l.getPopularWriterAndDelete()
            
//         then
//             System.out.println("POPULAR WRITER FOUND");
//             $l.addPopularWriter($w);
//             System.out.println($w.getName());
//             System.out.println("POPULAR WRITER FOUND END");
//     end

